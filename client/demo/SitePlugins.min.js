function SitePlugins(container){this.gui=new Gui(container);this.sitePluginsStore=new SitePluginsStore(this.gui)}SitePlugins.prototype.setJWT=function setJWT(){};SitePlugins.prototype.openStore=function openStore(){this.sitePluginsStore.openMainMenu()};function Gui(container){this.container=container}Gui.prototype.prompt=function prompt(question,options,callback){if(typeof options=="function"){callback=options;options="freepick"}callback=typeof callback=="function"?callback:function(){};var promptContainer=this.container.appendChild(document.createElement("div"));var promptContent=promptContainer.appendChild(document.createElement("div"));var questionDom=promptContent.appendChild(document.createElement("span"));var answers=promptContent.appendChild(document.createElement("div"));promptContainer.className="gui-prompt-container";promptContent.className="gui-prompt-content";questionDom.className="gui-prompt-question";answers.className="gui-prompt-answers";questionDom.appendChild(document.createTextNode(question));if(options=="freepick"){answers.appendChild(this.createFreePick(question,function(answer){callback(answer);this.container.removeChild(promptContainer)}.bind(this)))}if(typeof options=="object"&&typeof options.length=="number"){for(var k=0;k<options.length;k++){var text=options[k].text||options[k];if(text=="freepick"){answers.appendChild(this.createFreePick(question,function(answer){callback(answer);this.container.removeChild(promptContainer)}.bind(this)));continue}var optionButton=answers.appendChild(document.createElement("div"));optionButton.className="gui-prompt-button gui-prompt-option-button";if(text=="Cancel")optionButton.className+=" gui-prompt-option-cancel";if(options[k].icon){var icon=optionButton.appendChild(document.createElement("img"));icon.className="icon";icon.src=options[k].icon;icon.alt=text}var textDom=optionButton.appendChild(document.createElement("div"));textDom.appendChild(document.createTextNode(text));textDom.className="gui-prompt-button-text";optionButton.addEventListener("click",function(option,event){this.container.removeChild(promptContainer);callback(option)}.bind(this,text))}}return promptContainer};Gui.prototype.createFreePick=function createFreePick(question,callback){var container=document.createElement("div");var freepick=container.appendChild(document.createElement("input"));freepick.className="gui-prompt-freepick-input";freepick.placeholder=question;freepick.addEventListener("keypress",function(event){if(event.keyCode==13){callback(freepick.value)}});var freepickButton=container.appendChild(document.createElement("div"));freepickButton.className="gui-prompt-button gui-prompt-freepick-button";freepickButton.appendChild(document.createTextNode("Submit"));freepickButton.addEventListener("click",function(event){callback(freepick.value)});return container};Gui.prototype.makeDraggable=function makeDraggable(targetElement,handleElement){if(!handleElement)handleElement=targetElement;var startPos=[];var elementStartPos=[];var dragging=false;function handleStart(event){dragging=true;startPos=[event.clientX||0,event.clientY||0];if(event.changedTouches&&event.changedTouches[0])startPos=[event.changedTouches[0].clientX||0,event.changedTouches[0].clientY||0];var boundingRect=targetElement.getBoundingClientRect();elementStartPos=[boundingRect.left,boundingRect.top];event.preventDefault()}function handleMove(event){if(dragging){targetElement.style.left=elementStartPos[0]-startPos[0]+(event.clientX||event.changedTouches[0].clientX)+"px";targetElement.style.top=elementStartPos[1]-startPos[1]+(event.clientY||event.changedTouches[0].clientY)+"px";event.preventDefault()}}handleElement.addEventListener("mousedown",handleStart);handleElement.addEventListener("touchstart",handleStart);document.addEventListener("mousemove",handleMove);document.addEventListener("touchmove",handleMove);handleElement.addEventListener("mouseup",function(event){dragging=false});handleElement.addEventListener("touchend",function(event){dragging=false})};Gui.prototype.createWindow=function createWindow(settings){var windowContainer=this.container.appendChild(document.createElement("div"));windowContainer.className="gui-window";var titleContainer=windowContainer.appendChild(document.createElement("div"));titleContainer.className="titlecontainer";if(settings.thinTitlebar)titleContainer.classList.add("thin-titlebar");var title=titleContainer.appendChild(document.createElement("span"));title.className="title";title.appendChild(document.createTextNode(settings.title||"window"));if(typeof settings.close=="undefined"||settings.close){var close=titleContainer.appendChild(document.createElement("span"));close.appendChild(document.createTextNode("X"));close.className="close";close.addEventListener("click",function(){if(windowContainer.parentNode&&!settings.isModal)windowContainer.parentNode.removeChild(windowContainer);if(typeof settings.onclose=="function")settings.onclose(windowContainer)});close.addEventListener("touchstart",function(){if(windowContainer.parentNode&&!settings.isModal)windowContainer.parentNode.removeChild(windowContainer);if(typeof settings.onclose=="function")settings.onclose(windowContainer)})}this.makeDraggable(windowContainer,titleContainer);return windowContainer};Gui.prototype.createSelection=function createSelection(options,defaultOption){var selectInput=document.createElement("select");for(var k=0;k<options.length;k++){var option=document.createElement("option");option.value=options[k];option.appendChild(document.createTextNode(options[k]));selectInput.add(option)}if(defaultOption)selectInput.selectedIndex=defaultOption;return selectInput};Gui.prototype.createButton=function createButton(text,callback){var button=document.createElement("div");button.classList="pluginstore-button";button.appendChild(document.createTextNode(text));button.addEventListener("click",callback);return button};function PluginCard(gui,pluginData){this._gui=gui;this._pluginData=pluginData}PluginCard.prototype.toDOM=function toDOM(){var button=document.createElement("div");button.classList="pluginstore-button";button.appendChild(document.createTextNode(this._pluginData.name+" by "+this._pluginData.useruuid));button.addEventListener("click",function(){const pluginWindow=new PluginWindow(this._gui,this._pluginData)}.bind(this));return button};function VersionCard(gui,plugindata,versionData){this._gui=gui;this._versionData=versionData;this._pluginData=plugindata}VersionCard.prototype.toDOM=function toDOM(){var button=document.createElement("div");button.classList="pluginstore-button";button.appendChild(document.createTextNode("v"+this._versionData.version));button.addEventListener("click",function(){const versionWindow=new VersionWindow(this._gui,this._pluginData,this._versionData)}.bind(this));return button};function NewPluginWindow(gui){this.gui=gui;this._pluginWindow=this.gui.createWindow({title:"New plugin",close:true});var content=this._pluginWindow.appendChild(document.createElement("div"));content.classList.add("content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("New plugin"));this._createForm(content)}NewPluginWindow.prototype._createForm=function _createForm(content){var formContainer=content.appendChild(document.createElement("div"));formContainer.className="newPluginForm";this._status=formContainer.appendChild(document.createElement("div"));this._nameInput=formContainer.appendChild(document.createElement("input"));this._nameInput.placeholder="My cool plugin";formContainer.appendChild(document.createElement("br"));formContainer.appendChild(document.createElement("br"));this._descriptionInput=formContainer.appendChild(document.createElement("textarea"));this._descriptionInput.placeholder="A good description of my plugin";var button=formContainer.appendChild(document.createElement("div"));button.classList="pluginstore-button";button.appendChild(document.createTextNode("Create new plugin"));button.addEventListener("click",this._submitData.bind(this))};NewPluginWindow.prototype._submitData=function _submitData(){const dataToSend={name:this._nameInput.value,desciption:this._descriptionInput.value};fetch("http://localhost:8755/plugins/new",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(dataToSend)}).then(response=>response.json()).then(data=>{if(!data){console.log("Data error",data);return this.displayError("Unknown data error.")}if(data.errors){return this.displayError(data.errors.map(el=>el.msg).join("\n"))}const newVersionWindow=new NewVersionWindow(this.gui,{uuid:data.uuid,name:dataToSend.name,description:dataToSend.description});this._pluginWindow.parentNode.removeChild(this._pluginWindow)}).catch(error=>{this.displayError(error)})};NewPluginWindow.prototype.displayError=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.appendChild(document.createTextNode(errorText));this._status.className="error"};NewPluginWindow.prototype.displaySuccess=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.appendChild(document.createTextNode(errorText));this._status.className="error"};NewPluginWindow.prototype.clearStatus=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.className=""};function NewVersionWindow(gui,pluginData){this._gui=gui;this._pluginWindow=this._gui.createWindow({title:"Adding a new version for "+pluginData.name,close:true});var content=this._pluginWindow.appendChild(document.createElement("div"));content.classList.add("content");content.classList.add("newversion-content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("Add a new version for plugin "+pluginData.name));var helpText=content.appendChild(document.createElement("h3"));helpText.appendChild(document.createTextNode("Tip: do not use this to code, but use something like notepad++ and just paste it in here so you don't accidently lose a lot of work"));this._sourceInput=content.appendChild(document.createElement("textarea"));this._sourceInput.value=this.BASE_MOD;content.appendChild(document.createElement("br"));content.appendChild(document.createElement("br"));this._versionSelectionInput=content.appendChild(this._gui.createSelection(["major change","minor change","bugfix"],1));content.appendChild(document.createElement("br"));var releaseNotesTitle=content.appendChild(document.createElement("h4"));releaseNotesTitle.appendChild(document.createTextNode("Release notes"));this._releaseNotesInput=content.appendChild(document.createElement("textarea"));this._releaseNotesInput.classList.add("releasenotes");content.appendChild(document.createElement("br"));content.appendChild(this._createButton("Test plugin",function(){eval(textarea.value)}.bind(this)));content.appendChild(this._createButton("Submit plugin",function(){}.bind(this)))}NewVersionWindow.prototype._createForm=function _createForm(content){var formContainer=content.appendChild(document.createElement("div"));formContainer.className="newPluginForm";this._status=formContainer.appendChild(document.createElement("div"));this._nameInput=formContainer.appendChild(document.createElement("input"));this._nameInput.placeholder="My cool plugin";formContainer.appendChild(document.createElement("br"));formContainer.appendChild(document.createElement("br"));this._descriptionInput=formContainer.appendChild(document.createElement("textarea"));this._descriptionInput.placeholder="A good description of my plugin";var button=formContainer.appendChild(document.createElement("div"));button.classList="pluginstore-button";button.appendChild(document.createTextNode("Create new plugin"));button.addEventListener("click",this._submitData.bind(this))};NewVersionWindow.prototype._submitData=function _submitData(){const data={source:this._sourceInput.value,changetype:this._versionSelectionInput,releasenotes:this._releaseNotesInput};fetch("http://localhost:8755/versions/new",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(data)}).then(response=>response.json()).then(data=>{const newVersionWindow=new NewVersionWindow;this._pluginWindow.parentNode.removeChild(this._pluginWindow)}).catch(error=>{this.displayError(error)})};NewVersionWindow.prototype.displayError=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.appendChild(document.createTextNode(errorText));this._status.className="error"};NewVersionWindow.prototype.displaySuccess=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.appendChild(document.createTextNode(errorText));this._status.className="error"};NewVersionWindow.prototype.clearStatus=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.className=""};NewVersionWindow.prototype._createButton=function _createButton(text,callback){var button=document.createElement("div");button.classList="pluginstore-button";button.appendChild(document.createTextNode(text));button.addEventListener("click",callback);return button};NewVersionWindow.prototype.BASE_MOD="// Here you can write the javascript for your mod\n";NewVersionWindow.prototype.BASE_MOD+="\n";NewVersionWindow.prototype.BASE_MOD+='anondraw.collab.chat.addMessage("Yay the mod loaded successfully!");';function PluginWindow(gui,pluginData){this._gui=gui;this._pluginData=pluginData;var pluginWindow=gui.createWindow({title:"Plugin "+pluginData.name,close:true});var content=pluginWindow.appendChild(document.createElement("div"));content.classList.add("content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("Plugin "+pluginData.name+" by "+pluginData.useruuid));var description=content.appendChild(document.createElement("div"));description.appendChild(document.createTextNode(pluginData.description));this._addVersions(content)}PluginWindow.prototype._addVersions=function _addVersions(content){var title=content.appendChild(document.createElement("h3"));title.appendChild(document.createTextNode("Versions"));fetch("http://localhost:8755/versions/list/"+this._pluginData.uuid).then(function(res){return res.json()}).then(function(data){for(var k=0;k<data.versions.length;k++){content.appendChild(new VersionCard(this._gui,data.versions[k]).toDOM())}}.bind(this))};function SitePluginsStore(gui){this._gui=gui}SitePluginsStore.prototype.openMainMenu=function openMainMenu(){var pluginStoreWindow=this._gui.createWindow({title:"Plugin store",close:true});var content=pluginStoreWindow.appendChild(document.createElement("div"));content.classList.add("content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("Pluginstore"));var button=content.appendChild(document.createElement("div"));button.classList="pluginstore-button";button.appendChild(document.createTextNode("List all plugins"));button.addEventListener("click",function(){this.openPluginList()}.bind(this));var button=content.appendChild(document.createElement("div"));button.classList="pluginstore-button";button.appendChild(document.createTextNode("Add new plugin"));button.addEventListener("click",function(){const newPluginWindow=new NewPluginWindow(this._gui)}.bind(this))};SitePluginsStore.prototype.openPluginList=function openPluginList(){var pluginListWindow=this._gui.createWindow({title:"Plugin list",close:true});var content=pluginListWindow.appendChild(document.createElement("div"));content.classList.add("content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("Plugin list"));fetch("http://localhost:8755/plugins/list").then(function(res){return res.json()}).then(function(data){for(var k=0;k<data.plugins.length;k++){content.appendChild(new PluginCard(this._gui,data.plugins[k]).toDOM())}}.bind(this))};SitePluginsStore.prototype.openPluginWindow=function openPluginWindow(uuid){throw new Error("Not implemented");fetch("http://localhost:8755/plugins/retrieve").then(function(res){return res.json()}).then(function(data){}.bind(this));this.openPluginWindowWithData()};SitePluginsStore.prototype.openPluginWindowWithData=function openPluginWindowWithData(pluginData){const pluginWindow=new PluginWindow(this._gui,pluginData)};function VersionWindow(gui,pluginData,versionData){this._gui=gui;this._pluginData=pluginData;this._versionData=versionData;var pluginWindow=this._gui.createWindow({title:"Version v"+this._versionData.version+" of "+this._pluginData.name,close:true});var content=pluginWindow.appendChild(document.createElement("div"));content.classList.add("content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("Version v"+this._versionData.version));var description=content.appendChild(document.createElement("div"));description.appendChild(document.createTextNode(pluginData.releasenotes));this._gui.createButton("Run this version",()=>{this._runVersion()})}VersionWindow.prototype._runVersion=function _runVersion(){fetch("http://localhost:8755/versions/source/"+this._pluginData.uuid+"/"+this._versionData.version).then(res=>res.json).then(data=>{eval(data.source)})};